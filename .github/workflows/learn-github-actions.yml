name: deploy_to_host
run-name: ${{ github.actor }} is deploying
on:
  push:
    branches:
      - main
jobs:
  flow-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Run Flow
        run: |
          git fetch --unshallow
          if git diff --name-only ${{ github.sha }} ${{ github.sha }}^ | grep -qE '\.js$'; then
            npm install
            npm run 
            flowflowStatus=$?
            if [ $flowStatus -ne 0 ]; then
              echo "Flow check failed. Exiting..."
              exit 1
            fi
          else
            echo "No JavaScript files changed. Skipping Flow check."
              exit 1
          fi

  build:
    needs: flow-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Build and Package
        run: |
          npm run build
          tar -czvf build.tar.gz build/

      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: builds

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_PRIVATE }}

      - name: Disable host key checking
        run: |
          mkdir -p ~/.ssh
          echo "StrictHostKeyChecking no" > ~/.ssh/config

      - name: Transfer files via SCP
        run: scp -P 29146 -r builds/build.tar.gz root@95.169.25.107:~/projects

      - name: Update build file
        run: ssh -p 29146 root@95.169.25.107 '
          cd ~/projects &&
          mkdir temp_build &&
          tar -zxvf build.tar.gz -C temp_build --strip-components=1 &&
          rsync -av --delete temp_build/ build/ &&
          rm -r temp_build
          '
      - name: restart docker-nginx on 8443
        run: ssh -p 29146 root@95.169.25.107 'docker restart nginx_on_8443'
